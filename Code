import tkinter as tk
from tkinter import messagebox
import random

class GuessingGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Guessing Game")
        self.root.geometry("400x300")
        
        self.number_to_guess = random.randint(1, 100)
        self.attempts = 0
        self.max_attempts = 10
        
        self.create_widgets()
    
    def create_widgets(self):
        self.title_label = tk.Label(self.root, text="Guess the Number!", font=("Pepetua", 24))
        self.title_label.place(relx=0.5, rely=0.1, anchor='center')
        
        self.instruction_label = tk.Label(self.root, text="Enter a number between 1 and 100", font=("Garamond", 14))
        self.instruction_label.place(relx=0.5, rely=0.25, anchor='center')
        
        self.guess_entry = tk.Entry(self.root, font=("Garamond", 14))
        self.guess_entry.place(relx=0.5, rely=0.45, anchor='center')
        
        self.guess_button = tk.Button(self.root, text="Guess", font=("Garamond", 14), command=self.check_guess)
        self.guess_button.place(relx=0.5, rely=0.65, anchor='center')
        
        self.feedback_label = tk.Label(self.root, text="", font=("Garamond", 14))
        self.feedback_label.place(relx=0.5, rely=0.75, anchor='center')
        
        self.attempts_label = tk.Label(self.root, text=f"Attempts: {self.attempts}/{self.max_attempts}", font=("Garamond", 14))
        self.attempts_label.place(relx=0.5, rely=0.85, anchor='center')
        
    def check_guess(self):
        try:
            guess = int(self.guess_entry.get())
            self.attempts += 1
            if guess < 1 or guess > 100:
                self.feedback_label.config(text="Please enter a number between 1 and 100.")
            elif guess < self.number_to_guess:
                self.feedback_label.config(text="Too low! Try again.")
            elif guess > self.number_to_guess:
                self.feedback_label.config(text="Too high! Try again.")
            else:
                messagebox.showinfo("Congratulations!", f"You've guessed it! The number was {self.number_to_guess}. It took you {self.attempts} attempts.")
                self.reset_game()
            
            self.attempts_label.config(text=f"Attempts: {self.attempts}/{self.max_attempts}")
            
            if self.attempts >= self.max_attempts and guess != self.number_to_guess:
                messagebox.showinfo("Game Over", f"You've used all {self.max_attempts} attempts! The number was {self.number_to_guess}.")
                self.reset_game()
        except ValueError:
            self.feedback_label.config(text="Invalid input! Please enter a number.")
        
    def reset_game(self):
        self.number_to_guess = random.randint(1, 100)
        self.attempts = 0
        self.feedback_label.config(text="")
        self.attempts_label.config(text=f"Attempts: {self.attempts}/{self.max_attempts}")
        self.guess_entry.delete(0, tk.END)
        
if __name__ == "__main__":
    root = tk.Tk()
    game = GuessingGame(root)
    root.mainloop()
